# Generated by Django 5.1.6 on 2025-03-05 07:43

import datetime
import django.db.models.deletion
import main_app.models.base
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(help_text='CSS class or image path for the achievement icon', max_length=100)),
                ('points_awarded', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(help_text='CSS class or image path for the badge icon', max_length=100)),
                ('badge_type', models.CharField(choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced'), ('EXPERT', 'Expert'), ('SPECIAL', 'Special')], max_length=20)),
                ('points_awarded', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('points_required', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='rewards/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('stock', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('periodicity', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=10)),
                ('created_at', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='habits', to='main_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('amount', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('COMPLETION', 'Habit Completion'), ('STREAK', 'Streak Milestone'), ('ACHIEVEMENT', 'Achievement Unlocked'), ('BADGE', 'Badge Earned'), ('BONUS', 'Bonus Points')], max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('reference_id', models.CharField(blank=True, max_length=36, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_transactions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Redemption',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('points_spent', models.PositiveIntegerField()),
                ('redeemed_at', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('FULFILLED', 'Fulfilled'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('fulfilled_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redemptions', to='main_app.pointtransaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to=settings.AUTH_USER_MODEL)),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='main_app.reward')),
            ],
        ),
        migrations.CreateModel(
            name='UserHabit',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('streak', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateField(default=main_app.models.base.get_current_date)),
                ('last_completed', models.DateField(blank=True, null=True)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='main_app.habit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habits', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('reminder_time', models.TimeField()),
                ('reminder_date', models.DateField(blank=True, null=True)),
                ('user_habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='main_app.userhabit')),
            ],
        ),
        migrations.CreateModel(
            name='HabitStreak',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('streak_length', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('user_habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='streaks', to='main_app.userhabit')),
            ],
        ),
        migrations.CreateModel(
            name='HabitHistory',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('completion_date', models.DateField()),
                ('user_habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='main_app.userhabit')),
            ],
            options={
                'verbose_name_plural': 'Habit histories',
            },
        ),
        migrations.CreateModel(
            name='UserPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='points', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User points',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('_notification_preferences', models.TextField(blank=True, null=True)),
                ('_appearance_settings', models.TextField(blank=True, null=True)),
                ('_privacy_settings', models.TextField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HabitAnalytics',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('longest_streak', models.IntegerField(default=0)),
                ('missed_count', models.IntegerField(default=0)),
                ('completion_rate', models.FloatField(default=0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='main_app.habit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='habit_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Habit analytics',
                'unique_together': {('user', 'habit')},
            },
        ),
        migrations.CreateModel(
            name='LeaderboardEntry',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('ALL_TIME', 'All Time')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('points', models.IntegerField(default=0)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Leaderboard entries',
                'unique_together': {('user', 'period_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('earned_date', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='main_app.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'achievement')},
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('earned_date', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='main_app.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='MissedHabit',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('missed_date', models.DateField()),
                ('created_at', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('user_habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missed_days', to='main_app.userhabit')),
            ],
            options={
                'unique_together': {('user_habit', 'missed_date')},
            },
        ),
        migrations.CreateModel(
            name='HabitCompletion',
            fields=[
                ('id', models.CharField(default=main_app.models.base.get_uuid, max_length=36, primary_key=True, serialize=False)),
                ('completion_date', models.DateField(default=main_app.models.base.get_current_date)),
                ('timestamp', models.DateTimeField(default=main_app.models.base.get_current_datetime)),
                ('user_habit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completions', to='main_app.userhabit')),
            ],
            options={
                'unique_together': {('user_habit', 'completion_date')},
            },
        ),
    ]
